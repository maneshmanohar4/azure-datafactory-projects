{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "azure-dataengg-adf"
		},
		"AzureDatabricks_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'AzureDatabricks'"
		},
		"azuredatastore_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'azuredatastore'"
		},
		"onpremssqlerver_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'onpremssqlerver'",
			"defaultValue": "Integrated Security=True;Data Source=MANESH-BOOK3-PR;Initial Catalog=Bikestore"
		},
		"onpremssqlerver_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'onpremssqlerver'"
		},
		"AzureDatabricks_properties_typeProperties_existingClusterId": {
			"type": "string",
			"defaultValue": "0309-113131-8m1s2wwc"
		},
		"azuredatastore_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://dataenggstore.dfs.core.windows.net/"
		},
		"onpremssqlerver_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "MANESH-BOOK3-PR\\manes"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Data_Load_to_Databricks')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Fetching Metadata",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Bikestore_dataset",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.metadata_table",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Filtering Enabled Tables",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Fetching Metadata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Fetching Metadata').output.value",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(item().is_enabled,1)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Foreach Enabled File",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Filtering Enabled Tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filtering Enabled Tables').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Multi File Incremental Loader",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Data_Load_to_Databricks_1",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"filetype": {
												"value": "@item().filetype",
												"type": "Expression"
											},
											"filename": {
												"value": "@item().filename",
												"type": "Expression"
											},
											"foldername": {
												"value": "@pipeline().parameters.foldername",
												"type": "Expression"
											},
											"sequence": {
												"value": "@item().sequence",
												"type": "Expression"
											},
											"table_id": {
												"value": "@item().table_id",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"metadata_table": {
						"type": "string",
						"defaultValue": "metadata_details"
					},
					"foldername": {
						"type": "string",
						"defaultValue": "loaddata"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Bikestore_dataset')]",
				"[concat(variables('factoryId'), '/pipelines/Data_Load_to_Databricks_1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Data_Load_to_Databricks_1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data Load Notebook",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/maneshmanohar4@gmail.com/azure-databricks-projects/main_script",
							"baseParameters": {
								"containername": {
									"value": "@pipeline().globalParameters.containername",
									"type": "Expression"
								},
								"storageaccount": {
									"value": "@pipeline().globalParameters.storageaccount",
									"type": "Expression"
								},
								"filename": {
									"value": "@concat(pipeline().parameters.foldername,'/',pipeline().parameters.filename,'.',pipeline().parameters.filetype)",
									"type": "Expression"
								},
								"tablename": {
									"value": "@pipeline().parameters.filename",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"filetype": {
						"type": "string"
					},
					"filename": {
						"type": "string"
					},
					"foldername": {
						"type": "string"
					},
					"sequence": {
						"type": "int"
					},
					"table_id": {
						"type": "int"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricks')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Data_Load_to_Databricks_MERGE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Fetching Metadata",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Bikestore_dataset",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.metadata_table",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Filtering Enabled Tables",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Fetching Metadata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Fetching Metadata').output.value",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(item().is_enabled,1)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Foreach Enabled File",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Filtering Enabled Tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filtering Enabled Tables').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Multi File Incremental Loader",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Data_Load_to_Databricks_MERGE_1",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"filetype": {
												"value": "@item().filetype",
												"type": "Expression"
											},
											"filename": {
												"value": "@item().filename",
												"type": "Expression"
											},
											"foldername": {
												"value": "@pipeline().parameters.foldername",
												"type": "Expression"
											},
											"sequence": {
												"value": "@item().sequence",
												"type": "Expression"
											},
											"table_id": {
												"value": "@item().table_id",
												"type": "Expression"
											},
											"keycol": {
												"value": "@item().keycol",
												"type": "Expression"
											},
											"columnlist": {
												"value": "@item().columnlist",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"metadata_table": {
						"type": "string",
						"defaultValue": "metadata_details"
					},
					"foldername": {
						"type": "string",
						"defaultValue": "incrementalload"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Bikestore_dataset')]",
				"[concat(variables('factoryId'), '/pipelines/Data_Load_to_Databricks_MERGE_1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Data_Load_to_Databricks_MERGE_1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data Load Notebook",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/maneshmanohar4@gmail.com/azure-databricks-projects/main_script_MERGE",
							"baseParameters": {
								"containername": {
									"value": "@pipeline().globalParameters.containername",
									"type": "Expression"
								},
								"storageaccount": {
									"value": "@pipeline().globalParameters.storageaccount",
									"type": "Expression"
								},
								"filename": {
									"value": "@concat(pipeline().parameters.foldername,'/',pipeline().parameters.filename,'_',string(pipeline().parameters.sequence),'.',pipeline().parameters.filetype)",
									"type": "Expression"
								},
								"tablename": {
									"value": "@pipeline().parameters.filename",
									"type": "Expression"
								},
								"keycol": {
									"value": "@pipeline().parameters.keycol",
									"type": "Expression"
								},
								"columnlist": {
									"value": "@pipeline().parameters.columnlist",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Data Load Notebook",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "fileflag",
							"value": {
								"value": "@activity('Data Load Notebook').output.runOutput",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(variables('fileflag'),'True')",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Update Sequence",
									"type": "Script",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "onpremssqlerver",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "@concat('update metadata_details set sequence=sequence+1 where table_id=''',string(pipeline().parameters.table_id),'''')",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"filetype": {
						"type": "string"
					},
					"filename": {
						"type": "string"
					},
					"foldername": {
						"type": "string"
					},
					"sequence": {
						"type": "int"
					},
					"table_id": {
						"type": "int"
					},
					"keycol": {
						"type": "string"
					},
					"columnlist": {
						"type": "string"
					}
				},
				"variables": {
					"fileflag": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricks')]",
				"[concat(variables('factoryId'), '/linkedServices/onpremssqlerver')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Incremental_Data_Load')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Fetching Metadata",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Bikestore_dataset",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.metadata_table",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Filtering Enabled Tables",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Fetching Metadata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Fetching Metadata').output.value",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(item().is_enabled,1)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Foreach Enabled File",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Filtering Enabled Tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filtering Enabled Tables').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Multi File Incremental Loader",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Incremental_Data_Load_1",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"filetype": {
												"value": "@item().filetype",
												"type": "Expression"
											},
											"filename": {
												"value": "@item().filename",
												"type": "Expression"
											},
											"foldername": {
												"value": "@pipeline().parameters.foldername",
												"type": "Expression"
											},
											"sequence": {
												"value": "@item().sequence",
												"type": "Expression"
											},
											"table_id": {
												"value": "@item().table_id",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"metadata_table": {
						"type": "string",
						"defaultValue": "metadata_details"
					},
					"foldername": {
						"type": "string",
						"defaultValue": "loaddata"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Bikestore_dataset')]",
				"[concat(variables('factoryId'), '/pipelines/Incremental_Data_Load_1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Incremental_Data_Load_1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "File Type Selector",
						"type": "Switch",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"on": {
								"value": "@pipeline().parameters.filetype",
								"type": "Expression"
							},
							"cases": [
								{
									"value": "csv",
									"activities": [
										{
											"name": "CSV Loader",
											"type": "Copy",
											"dependsOn": [],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "DelimitedTextSource",
													"storeSettings": {
														"type": "AzureBlobFSReadSettings",
														"recursive": true,
														"enablePartitionDiscovery": false
													},
													"formatSettings": {
														"type": "DelimitedTextReadSettings"
													}
												},
												"sink": {
													"type": "SqlServerSink",
													"writeBehavior": "insert",
													"sqlWriterUseTableLock": false
												},
												"enableStaging": false,
												"translator": {
													"type": "TabularTranslator",
													"typeConversion": true,
													"typeConversionSettings": {
														"allowDataTruncation": true,
														"treatBooleanAsNumber": false
													}
												}
											},
											"inputs": [
												{
													"referenceName": "DatalakeCSV",
													"type": "DatasetReference",
													"parameters": {
														"containername": {
															"value": "@pipeline().globalParameters.containername",
															"type": "Expression"
														},
														"foldername": {
															"value": "@pipeline().parameters.foldername",
															"type": "Expression"
														},
														"filename": {
															"value": "@concat(pipeline().parameters.filename,'_',string(pipeline().parameters.sequence),'.csv')",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "Bikestore_dataset",
													"type": "DatasetReference",
													"parameters": {
														"tablename": {
															"value": "@pipeline().parameters.filename",
															"type": "Expression"
														}
													}
												}
											]
										}
									]
								},
								{
									"value": "json",
									"activities": [
										{
											"name": "JSON Loader",
											"type": "Copy",
											"dependsOn": [],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "JsonSource",
													"storeSettings": {
														"type": "AzureBlobFSReadSettings",
														"recursive": true,
														"wildcardFolderPath": {
															"value": "@concat(pipeline().globalParameters.containername,'/',pipeline().parameters.foldername)",
															"type": "Expression"
														},
														"wildcardFileName": {
															"value": "@concat(pipeline().parameters.filename,'.json')",
															"type": "Expression"
														},
														"enablePartitionDiscovery": false
													},
													"formatSettings": {
														"type": "JsonReadSettings"
													}
												},
												"sink": {
													"type": "SqlServerSink",
													"writeBehavior": "insert",
													"sqlWriterUseTableLock": false
												},
												"enableStaging": false
											},
											"inputs": [
												{
													"referenceName": "DatalakeJSON",
													"type": "DatasetReference",
													"parameters": {
														"containername": {
															"value": "@pipeline().globalParameters.containername",
															"type": "Expression"
														},
														"foldername": {
															"value": "@pipeline().parameters.foldername",
															"type": "Expression"
														},
														"filename": {
															"value": "@concat(pipeline().parameters.filename,'_',string(pipeline().parameters.sequence),'.json')",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "Bikestore_dataset",
													"type": "DatasetReference",
													"parameters": {
														"tablename": {
															"value": "@pipeline().parameters.filename",
															"type": "Expression"
														}
													}
												}
											]
										}
									]
								}
							]
						}
					},
					{
						"name": "Update Sequence",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "File Type Selector",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "onpremssqlerver",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": {
										"value": "@concat('update metadata_details set sequence=sequence+1 where table_id=''',string(pipeline().parameters.table_id),'''')",
										"type": "Expression"
									}
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"filetype": {
						"type": "string"
					},
					"filename": {
						"type": "string"
					},
					"foldername": {
						"type": "string"
					},
					"sequence": {
						"type": "int"
					},
					"table_id": {
						"type": "int"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/onpremssqlerver')]",
				"[concat(variables('factoryId'), '/datasets/DatalakeCSV')]",
				"[concat(variables('factoryId'), '/datasets/Bikestore_dataset')]",
				"[concat(variables('factoryId'), '/datasets/DatalakeJSON')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Metadata_Based_Data_Load')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Fetching Metadata",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Bikestore_dataset",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.metadata_table",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Filtering Enabled Tables",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Fetching Metadata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Fetching Metadata').output.value",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(item().is_enabled,1)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Foreach Enabled File",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Filtering Enabled Tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filtering Enabled Tables').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Load Data",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "SqlServerSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DatalakeCSV",
											"type": "DatasetReference",
											"parameters": {
												"containername": {
													"value": "@pipeline().globalParameters.containername",
													"type": "Expression"
												},
												"foldername": {
													"value": "@pipeline().parameters.foldername",
													"type": "Expression"
												},
												"filename": {
													"value": "@concat(item().filename,'.csv')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Bikestore_dataset",
											"type": "DatasetReference",
											"parameters": {
												"tablename": {
													"value": "@item().filename",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"metadata_table": {
						"type": "string",
						"defaultValue": "metadata_details"
					},
					"foldername": {
						"type": "string",
						"defaultValue": "loaddata"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Bikestore_dataset')]",
				"[concat(variables('factoryId'), '/datasets/DatalakeCSV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Multi_Type_File_Load')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Fetching Metadata",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Bikestore_dataset",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.metadata_table",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Filtering Enabled Tables",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Fetching Metadata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Fetching Metadata').output.value",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(item().is_enabled,1)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Foreach Enabled File",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Filtering Enabled Tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filtering Enabled Tables').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Multi File Loader",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Multi_Type_File_Load_1",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"filetype": {
												"value": "@item().filetype",
												"type": "Expression"
											},
											"filename": {
												"value": "@item().filename",
												"type": "Expression"
											},
											"foldername": {
												"value": "@pipeline().parameters.foldername",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"metadata_table": {
						"type": "string",
						"defaultValue": "metadata_details"
					},
					"foldername": {
						"type": "string",
						"defaultValue": "loaddata"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Bikestore_dataset')]",
				"[concat(variables('factoryId'), '/pipelines/Multi_Type_File_Load_1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Multi_Type_File_Load_1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "File Type Selector",
						"type": "Switch",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"on": {
								"value": "@pipeline().parameters.filetype",
								"type": "Expression"
							},
							"cases": [
								{
									"value": "csv",
									"activities": [
										{
											"name": "CSV Loader",
											"type": "Copy",
											"dependsOn": [],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "DelimitedTextSource",
													"storeSettings": {
														"type": "AzureBlobFSReadSettings",
														"recursive": true,
														"enablePartitionDiscovery": false
													},
													"formatSettings": {
														"type": "DelimitedTextReadSettings"
													}
												},
												"sink": {
													"type": "SqlServerSink",
													"writeBehavior": "insert",
													"sqlWriterUseTableLock": false
												},
												"enableStaging": false,
												"translator": {
													"type": "TabularTranslator",
													"typeConversion": true,
													"typeConversionSettings": {
														"allowDataTruncation": true,
														"treatBooleanAsNumber": false
													}
												}
											},
											"inputs": [
												{
													"referenceName": "DatalakeCSV",
													"type": "DatasetReference",
													"parameters": {
														"containername": {
															"value": "@pipeline().globalParameters.containername",
															"type": "Expression"
														},
														"foldername": {
															"value": "@pipeline().parameters.foldername",
															"type": "Expression"
														},
														"filename": {
															"value": "@concat(pipeline().parameters.filename,'.csv')",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "Bikestore_dataset",
													"type": "DatasetReference",
													"parameters": {
														"tablename": {
															"value": "@pipeline().parameters.filename",
															"type": "Expression"
														}
													}
												}
											]
										}
									]
								},
								{
									"value": "json",
									"activities": [
										{
											"name": "JSON Loader",
											"type": "Copy",
											"dependsOn": [],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "JsonSource",
													"storeSettings": {
														"type": "AzureBlobFSReadSettings",
														"recursive": true,
														"wildcardFolderPath": {
															"value": "@concat(pipeline().globalParameters.containername,'/',pipeline().parameters.foldername)",
															"type": "Expression"
														},
														"wildcardFileName": {
															"value": "@concat(pipeline().parameters.filename,'.json')",
															"type": "Expression"
														},
														"enablePartitionDiscovery": false
													},
													"formatSettings": {
														"type": "JsonReadSettings"
													}
												},
												"sink": {
													"type": "SqlServerSink",
													"writeBehavior": "insert",
													"sqlWriterUseTableLock": false
												},
												"enableStaging": false
											},
											"inputs": [
												{
													"referenceName": "DatalakeJSON",
													"type": "DatasetReference",
													"parameters": {
														"containername": {
															"value": "@pipeline().globalParameters.containername",
															"type": "Expression"
														},
														"foldername": {
															"value": "@pipeline().parameters.foldername",
															"type": "Expression"
														},
														"filename": {
															"value": "@concat(pipeline().parameters.filename,'.csv')",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "Bikestore_dataset",
													"type": "DatasetReference",
													"parameters": {
														"tablename": {
															"value": "@pipeline().parameters.filename",
															"type": "Expression"
														}
													}
												}
											]
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"filetype": {
						"type": "string"
					},
					"filename": {
						"type": "string"
					},
					"foldername": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DatalakeCSV')]",
				"[concat(variables('factoryId'), '/datasets/Bikestore_dataset')]",
				"[concat(variables('factoryId'), '/datasets/DatalakeJSON')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Selecting_Latest_Edited_File')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "File List",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "LatestEditedFile",
								"type": "DatasetReference",
								"parameters": {
									"containername": {
										"value": "@pipeline().globalParameters.containername",
										"type": "Expression"
									},
									"foldername": {
										"value": "@pipeline().parameters.foldername",
										"type": "Expression"
									},
									"filename": "*"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "File Iterator",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "File List",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('File List').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "FileName and LastModified",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "LatestEditedFile",
											"type": "DatasetReference",
											"parameters": {
												"containername": {
													"value": "@pipeline().globalParameters.containername",
													"type": "Expression"
												},
												"foldername": {
													"value": "@pipeline().parameters.foldername",
													"type": "Expression"
												},
												"filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										},
										"fieldList": [
											"itemName",
											"lastModified"
										],
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										},
										"formatSettings": {
											"type": "DelimitedTextReadSettings"
										}
									}
								},
								{
									"name": "Latest Timestamp Check",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "FileName and LastModified",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@greater(activity('FileName and LastModified').output.lastModified,variables('lastModified'))",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "Set LastModified",
												"type": "SetVariable",
												"dependsOn": [],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "lastModified",
													"value": {
														"value": "@activity('FileName and LastModified').output.lastModified",
														"type": "Expression"
													}
												}
											},
											{
												"name": "Set ItemName",
												"type": "SetVariable",
												"dependsOn": [
													{
														"activity": "Set LastModified",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "itemName",
													"value": {
														"value": "@activity('FileName and LastModified').output.itemName",
														"type": "Expression"
													}
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "Final Result",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "File Iterator",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "FinalResult",
							"value": {
								"value": "@concat(variables('itemName'),'---',variables('lastModified'))",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"foldername": {
						"type": "string",
						"defaultValue": "latesteditedfile"
					}
				},
				"variables": {
					"lastModified": {
						"type": "String",
						"defaultValue": "1999-03-01T07:14:31Z"
					},
					"itemName": {
						"type": "String",
						"defaultValue": "csv"
					},
					"FinalResult": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/LatestEditedFile')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Simple_Load_CSV_to_Table')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CSV to SQL Table",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlServerSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DatalakeCSV",
								"type": "DatasetReference",
								"parameters": {
									"containername": {
										"value": "@pipeline().globalParameters.containername",
										"type": "Expression"
									},
									"foldername": {
										"value": "@pipeline().parameters.foldername",
										"type": "Expression"
									},
									"filename": {
										"value": "@pipeline().parameters.filename",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "Bikestore_dataset",
								"type": "DatasetReference",
								"parameters": {
									"tablename": {
										"value": "@pipeline().parameters.tablename",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"filename": {
						"type": "string",
						"defaultValue": "customers.csv"
					},
					"tablename": {
						"type": "string",
						"defaultValue": "customers"
					},
					"foldername": {
						"type": "string",
						"defaultValue": "loaddata"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DatalakeCSV')]",
				"[concat(variables('factoryId'), '/datasets/Bikestore_dataset')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Bikestore_dataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "onpremssqlerver",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"tablename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().tablename",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/onpremssqlerver')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DatalakeCSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "azuredatastore",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"containername": {
						"type": "string"
					},
					"foldername": {
						"type": "string"
					},
					"filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().filename",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().foldername",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().containername",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/azuredatastore')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DatalakeJSON')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "azuredatastore",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"containername": {
						"type": "string"
					},
					"foldername": {
						"type": "string"
					},
					"filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/azuredatastore')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LatestEditedFile')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "azuredatastore",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"containername": {
						"type": "string"
					},
					"foldername": {
						"type": "string"
					},
					"filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().filename",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().foldername",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().containername",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/azuredatastore')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDatabricks')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-6135691623039698.18.azuredatabricks.net",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('AzureDatabricks_accessToken')]"
					},
					"existingClusterId": "[parameters('AzureDatabricks_properties_typeProperties_existingClusterId')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/azuredatastore')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('azuredatastore_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('azuredatastore_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/onpremssqlerver')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('onpremssqlerver_connectionString')]",
					"userName": "[parameters('onpremssqlerver_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('onpremssqlerver_password')]"
					}
				},
				"connectVia": {
					"referenceName": "personalsystem",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/personalsystem')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/personalsystem')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		}
	]
}