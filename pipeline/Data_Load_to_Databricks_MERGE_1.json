{
	"name": "Data_Load_to_Databricks_MERGE_1",
	"properties": {
		"activities": [
			{
				"name": "Update Sequence",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "Set variable1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "onpremssqlerver",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": {
								"value": "@concat('update metadata_details set sequence=sequence+1 where table_id=''',string(pipeline().parameters.table_id),'''')",
								"type": "Expression"
							}
						}
					],
					"scriptBlockExecutionTimeout": "02:00:00"
				}
			},
			{
				"name": "Data Load Notebook",
				"type": "DatabricksNotebook",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebookPath": "/Repos/maneshmanohar4@gmail.com/azure-databricks-projects/main_script_MERGE",
					"baseParameters": {
						"containername": {
							"value": "@pipeline().globalParameters.containername",
							"type": "Expression"
						},
						"storageaccount": {
							"value": "@pipeline().globalParameters.storageaccount",
							"type": "Expression"
						},
						"filename": {
							"value": "@concat(pipeline().parameters.foldername,'/',pipeline().parameters.filename,'_',string(pipeline().parameters.sequence),'.',pipeline().parameters.filetype)",
							"type": "Expression"
						},
						"tablename": {
							"value": "@pipeline().parameters.filename",
							"type": "Expression"
						},
						"keycol": {
							"value": "@pipeline().parameters.keycol",
							"type": "Expression"
						},
						"columnlist": {
							"value": "@pipeline().parameters.columnlist",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "Set variable1",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Data Load Notebook",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "fileflag",
					"value": {
						"value": "@activity('Data Load Notebook').output.pipelineReturnValue",
						"type": "Expression"
					}
				}
			}
		],
		"parameters": {
			"filetype": {
				"type": "string"
			},
			"filename": {
				"type": "string"
			},
			"foldername": {
				"type": "string"
			},
			"sequence": {
				"type": "int"
			},
			"table_id": {
				"type": "int"
			},
			"keycol": {
				"type": "string"
			},
			"columnlist": {
				"type": "string"
			}
		},
		"variables": {
			"fileflag": {
				"type": "Boolean"
			}
		},
		"annotations": []
	}
}